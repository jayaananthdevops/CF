AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for the react web app

Parameters:
  ProjectId:
    Type: String
    Description: Project ID.
    Default: my-app
  WebsiteS3Bucket:
    Type: String
    Description: Bucket Name
    Default: preetitest-website
  CodeBucket:
    Type: String
    Description: Bucket in which you have code
    Default: code-bucket
  CodeKey:
    Type: String
    Description: key of zipped code
    Default: test-react/my-app.zip
    

Resources:

  TargetS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref WebsiteS3Bucket
      WebsiteConfiguration:
        ErrorDocument: 'index.html'
        IndexDocument: 'index.html'
      AccessControl: PublicRead
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false	  
  TargetS3BucketReadPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref TargetS3Bucket
      
      PolicyDocument:
        Statement:
          - Action: 
              - 's3:GetObject'
            Effect: Allow
            Resource: 
              - !Sub 'arn:${AWS::Partition}:s3:::${WebsiteS3Bucket}/*'
            Principal: '*'
            
  ArtifactBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: cloudkatha-artifact-bucket
   
  ArtifactBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetBucketVersioning'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactBucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactBucket}/*'
            Effect: Allow
            Principal:
              AWS:
              AWS:
                - !GetAtt 
                  - ToolChainRole
                  - Arn
          - Action:
              - 's3:PutObject'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactBucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactBucket}/*'
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 
                  - ToolChainRole
                  - Arn
        
  CodeCommitRepo:
    Type: 'AWS::CodeCommit::Repository'
    Description: Repo application source code
    Properties:
      RepositoryName: !Ref ProjectId
      Code:
        BranchName: main
        S3: 
          Bucket: !Ref CodeBucket
          Key: !Ref CodeKey
          
  CodeBuildProject:
    DependsOn:
      - ToolChainRole
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: codepipeline
        Packaging: zip
      ServiceRole: !Ref ToolChainRole
      Environment:
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Value: !Ref TargetS3Bucket
            Name: WEBSITE_S3_BUCKET
        Image: 'aws/codebuild/standard:3.0'
        ComputeType: medium
      Source:
        Type: codepipeline
      Name: !Ref ProjectId
      

  ToolChainRole:
    Type: 'AWS::IAM::Role'
    Description: Creating role for codebuild
    Properties:
      Path: /
      RoleName: !Sub 'ToolChainRole-${ProjectId}'
      Policies:
        - PolicyName: ToolChainRolePolicy
          PolicyDocument:
            Statement:
              - Action:
                  - 'codecommit:*'
                  - 'codepipeline:*'
                  - 'codebuild:*'
                  - 's3:*'
                  - 'events:*'
                  - 'iam:PassRole'
                  - 'cloudwatch:*'
                  - 'kms:*'
                  - 'cloudformation:*'
                  - 'logs:*'
                Resource: '*'
                Effect: Allow

      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codedeploy.amazonaws.com
                - codepipeline.amazonaws.com
                - events.amazonaws.com
                
  SourceEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref ProjectId ] ]
        detail:
          referenceType:
            - branch
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - main
        source:
          - aws.codecommit
      Description: >-
        Rule for Amazon CloudWatch Events to detect changes to the source
        repository and trigger pipeline execution
      State: ENABLED
      Targets:
        - Id: ProjectPipelineTarget
          Arn: !Sub >-
            arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectId}-Pipeline
          RoleArn: !GetAtt
            - ToolChainRole
            - Arn
      Name: Demo_Source_Event

  DemoPipeline:
    DependsOn:
      - ToolChainRole
      - ArtifactBucket
      - CodeBuildProject
    Type: 'AWS::CodePipeline::Pipeline'
    Description: Creating an AWS CodePipeline
    Properties:
      RoleArn: !GetAtt
        - ToolChainRole
        - Arn
      Name: !Sub '${ProjectId}-Pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Source
                Version: 1
                Provider: CodeCommit
              Configuration:
                PollForSourceChanges: false
                RepositoryName: !Ref ProjectId
                BranchName: main
              InputArtifacts: []
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              RunOrder: 1
              Name: ApplicationSource
          Name: Source
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Build
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ProjectId
              InputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              OutputArtifacts: []
              RunOrder: 1
              Name: PackageExport
          Name: Build
          
Outputs:
  WebsiteUrl:
    Description: URL of S3 Website
    Value: !GetAtt TargetS3Bucket.WebsiteURL